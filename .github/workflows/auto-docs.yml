name: AutoDocX CI/CD

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  lint:
    name: Lint och statisk analys
    runs-on: ubuntu-latest
    steps:
      - name: Check out koden
        uses: actions/checkout@v3

      - name: Installera Python 3.10
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Installera beroenden och formateringsverktyg
        run: |
          pip install --upgrade pip
          pip install -r requirements.txt
          pip install autoflake isort black flake8

      - name: Auto-fixa imports och formatering
        run: |
          autoflake --in-place --remove-unused-variables --remove-all-unused-imports --recursive .
          isort .
          black .

      - name: Konfigurera flake8
        run: |
          echo -e "[flake8]\nmax-line-length = 120\nignore = E501, W293, W291, F541, W503, F811, F841\nexclude = .git, __pycache__, dist, build, venv, .venv" > .flake8

      - name: Kör linting (flake8)
        run: flake8 --config=.flake8

  test:
    name: Kör enhetstester
    runs-on: ubuntu-latest
    steps:
      - name: Check out koden
        uses: actions/checkout@v3

      - name: Installera Python 3.10
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Installera beroenden
        run: |
          pip install --upgrade pip
          pip install -r requirements.txt

      - name: Kör tester med pytest
        run: |
          pytest --maxfail=1 --disable-warnings -q || [ $? -eq 5 ] && echo "Inga tester hittades" || exit 1

  generate-docs:
    name: Generera dokumentation
    runs-on: ubuntu-latest
    needs: [lint, test]
    steps:
      - name: Check out koden
        uses: actions/checkout@v3

      - name: Installera Python 3.10
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Installera beroenden
        run: |
          pip install --upgrade pip
          pip install -r requirements.txt

      - name: Skapa .env för CI
        run: |
          echo "DEFAULT_MODEL=simulate" > .env
          echo "DEFAULT_PATH=./" >> .env
          echo "IGNORE_PATHS=node_modules,.git,venv" >> .env

      - name: Kör AutoDocX
        run: |
          python -m src.core.main ./ --update --full

      - name: Commit & Push dokumentation
        if: success()
        run: |
          git config --local user.email "actions@github.com"
          git config --local user.name "GitHub Actions"
          git add docs/
          git commit -m "AutoDocX: Uppdaterad dokumentation" || echo "Inga ändringar att committa"
          git push